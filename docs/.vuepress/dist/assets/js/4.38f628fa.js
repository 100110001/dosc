(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{365:function(t,a,s){t.exports=s.p+"assets/img/25c0f1f233a3d92110e53babda04f4d.514207dc.jpg"},366:function(t,a,s){t.exports=s.p+"assets/img/f285e1d9379a8a9378d273425751279.89401bbf.jpg"},367:function(t,a,s){t.exports=s.p+"assets/img/412350f376e84110d8649520ee8ab90e6882a8.51dc6c5c.png"},368:function(t,a,s){t.exports=s.p+"assets/img/e1509c978aeb4d560c1224b3f39b420a634885.0cbf0836.gif"},382:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"web"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[t._v("#")]),t._v(" Web")]),t._v(" "),e("h2",{attrs:{id:"http-1-0-1-1-2-0-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-1-1-2-0-的区别"}},[t._v("#")]),t._v(" HTTP 1.0/1.1/2.0 的区别")]),t._v(" "),e("h3",{attrs:{id:"http1-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1-0"}},[t._v("#")]),t._v(" HTTP1.0")]),t._v(" "),e("p",[t._v("HTTP 1.0 浏览器与服务器只保持短暂的连接，每次请求都需要与服务器建立一个 TCP 连接")]),t._v(" "),e("p",[t._v("服务器完成请求处理后立即断开 TCP 连接，服务器不跟踪每个客户也不记录过去的请求")]),t._v(" "),e("p",[t._v("如果需要建立长连接，需要设置一个非标准的 Connection 字段 "),e("code",[t._v("Connection: keep-alive")])]),t._v(" "),e("h3",{attrs:{id:"http1-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" HTTP1.1")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("HTTP1.1")]),t._v("中，默认支持长连接（"),e("code",[t._v("Connection: keep-alive")]),t._v("），即在一个 TCP 连接上可以传送多个"),e("code",[t._v("HTTP")]),t._v("请求和响应，减少了建立和关闭连接的消耗和延迟")]),t._v(" "),e("p",[e("code",[t._v("HTTP 1.1")]),t._v("还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务器端必须按照接收到客户端请求的先后顺序依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著地减少了整个下载过程所需要的时间")]),t._v(" "),e("p",[e("code",[t._v("HTTP1.1")]),t._v("在"),e("code",[t._v("HTTP1.0")]),t._v("的基础上，增加更多的请求头和响应头来完善的功能，如下：")]),t._v(" "),e("ul",[e("li",[t._v("引入了更多的缓存控制策略，如"),e("code",[t._v("If-Unmodified-Since")]),t._v(","),e("code",[t._v("If-Match")]),t._v(", "),e("code",[t._v("If-None-Match")]),t._v("等缓存头来控制缓存策略")]),t._v(" "),e("li",[t._v("引入"),e("code",[t._v("range")]),t._v("，允许值请求资源某个部分")]),t._v(" "),e("li",[t._v("引入"),e("code",[t._v("host")]),t._v("，实现了在一台 WEB 服务器上可以在同一个 IP 地址和端口号上使用不同的主机名来创建多个虚拟 WEB 站点")]),t._v(" "),e("li",[t._v("其他的请求方法："),e("code",[t._v("put")]),t._v("、"),e("code",[t._v("delete")]),t._v("、"),e("code",[t._v("options")])])]),t._v(" "),e("h3",{attrs:{id:"http2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),e("p",[t._v("而"),e("code",[t._v("HTTP2.0")]),t._v("在相比之前版本，性能上有很大的提升，如添加了一个特性：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("多路复用")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("HTTP/2")]),t._v(" 复用"),e("code",[t._v("TCP")]),t._v("连接，在一个连接里，客户端和浏览器都可以"),e("strong",[t._v("同时")]),t._v("发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了”队头堵塞”")])])]),t._v(" "),e("li",[e("p",[t._v("二进制分帧")]),t._v(" "),e("ul",[e("li",[t._v("帧是"),e("code",[t._v("HTTP2")]),t._v("通信中最小单位信息。"),e("code",[t._v("HTTP/2")]),t._v(" 采用二进制格式传输数据，而非 "),e("code",[t._v("HTTP 1.x")]),t._v("的文本格式，解析起来更高效。将请求和响应数据分割为更小的帧，并且它们采用二进制编码。")]),t._v(" "),e("li",[e("code",[t._v("HTTP2")]),t._v("中，同域名下所有通信都在单个连接上完成，该连接可以承载任意数量的双向数据流")]),t._v(" "),e("li",[t._v("每个数据流都以消息的形式发送，而消息又由一个或多个帧组成。多个帧之间可以乱序发送，根据帧首部的流标识可以重新组装，这也是多路复用同时发送数据的实现条件")])])]),t._v(" "),e("li",[e("p",[t._v("首部压缩")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("HTTP/2")]),t._v("在客户端和服务器端使用“首部表”来跟踪和存储之前发送的键值对，对于相同的数据，不再通过每次请求和响应发送")])])]),t._v(" "),e("li",[e("p",[t._v("服务器推送")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("HTTP2")]),t._v("引入服务器推送，允许服务端推送资源给客户端")])])])]),t._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("HTTP1.0")]),t._v(" "),e("ul",[e("li",[t._v("浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个 TCP 连接")])])]),t._v(" "),e("li",[e("p",[t._v("HTTP1.1：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("引入了持久连接，即 TCP 连接默认不关闭，可以被多个请求复用")])]),t._v(" "),e("li",[e("p",[t._v("在同一个 TCP 连接里面，客户端可以同时发送多个请求")])]),t._v(" "),e("li",[e("p",[t._v("虽然允许复用 TCP 连接，但是同一个 TCP 连接里面，所有的数据通信是按次序进行的，服务器只有处理完一个请求，才会接着处理下一个请求。如果前面的处理特别慢，后面就会有许多请求排队等着")])]),t._v(" "),e("li",[e("p",[t._v("新增了一些请求方法")])]),t._v(" "),e("li",[e("p",[t._v("新增了一些请求头和响应头")])])])]),t._v(" "),e("li",[e("p",[t._v("HTTP2.0：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("采用二进制格式而非文本格式")])]),t._v(" "),e("li",[e("p",[t._v("完全多路复用，而非有序并阻塞的、只需一个连接即可实现并行")])]),t._v(" "),e("li",[e("p",[t._v("使用报头压缩，降低开销")])]),t._v(" "),e("li",[e("p",[t._v("服务器推送")])])])])]),t._v(" "),e("h2",{attrs:{id:"缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),e("p",[e("img",{attrs:{src:s(365),alt:"An image"}})]),t._v(" "),e("h3",{attrs:{id:"http-报文中与缓存相关的首部字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-报文中与缓存相关的首部字段"}},[t._v("#")]),t._v(" HTTP 报文中与缓存相关的首部字段")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("通用首部字段")]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("字段名稱")]),t._v(" "),e("td",[t._v("说明")])]),t._v(" "),e("tr",[e("td",[t._v("Cache-Control")]),t._v(" "),e("td",[t._v("控制缓存的行为")])]),t._v(" "),e("tr",[e("td",[t._v("Pragma")]),t._v(" "),e("td",[t._v("http1.0 的旧社会遗留物，值为"),e("code",[t._v("no-cache")]),t._v("时禁用缓存")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("请求首部字段")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("if-Match")]),t._v(" "),e("td",[t._v("比较"),e("code",[t._v("eTag")]),t._v("是否一致")])]),t._v(" "),e("tr",[e("td",[t._v("if-None-Match")]),t._v(" "),e("td",[t._v("比较"),e("code",[t._v("eTag")]),t._v("是否不一致")])]),t._v(" "),e("tr",[e("td",[t._v("if-Modified-Since")]),t._v(" "),e("td",[t._v("比较资源最后更新的时间是否一致")])]),t._v(" "),e("tr",[e("td",[t._v("if-Unmodified-Since")]),t._v(" "),e("td",[t._v("比较资源最后更新的时间是否不一致")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("响应首部字段")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("ETag")]),t._v(" "),e("td",[t._v("资源的匹配信息")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("实体首部字段")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("Expires")]),t._v(" "),e("td",[e("code",[t._v("http1.0")]),t._v(" 的遗留物，实体主体过期的时间")])]),t._v(" "),e("tr",[e("td",[t._v("Last-Modified")]),t._v(" "),e("td",[t._v("资源的最后一次修改的时间")])])])]),t._v(" "),e("h3",{attrs:{id:"缓存机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),e("p",[t._v("浏览器中缓存可分为强缓存和协商缓存，强缓存与协商缓存的")]),t._v(" "),e("ul",[e("li",[t._v("共同点是：如果命中，都是从客户端缓存中加载资源，而不是从服务器加载资源数据；")]),t._v(" "),e("li",[t._v("区别是：强缓存不发请求到服务器，协商缓存会发请求到服务器。")])]),t._v(" "),e("h4",{attrs:{id:"强缓存-expires-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-expires-cache-control"}},[t._v("#")]),t._v(" 强缓存：Expires&Cache-Control")]),t._v(" "),e("p",[e("strong",[t._v("Expires 是 HTTP 1.0 提出的一个表示资源过期时间的 header，它描述的是一个绝对时间，由服务器返回，用 GMT 格式的字符串表示")]),t._v("，如：Expires:Thu, 31 Dec 2037 23:55:55 GMT，包含了 Expires 头标签的文件，就说明浏览器对于该文件缓存具有非常大的控制权。")]),t._v(" "),e("p",[e("strong",[t._v("Cache-Control，这是一个相对时间，在配置缓存的时候，以秒为单位，用数值表示")]),t._v(",在进行缓存命中的时候，"),e("strong",[t._v("都是利用客户端时间进行判断")]),t._v("，")]),t._v(" "),e("p",[e("strong",[t._v("当 response header 中，Expires 和 Cache-Control 同时存在时，Cache-Control 优先级高于 Expires")])]),t._v(" "),e("p",[t._v("可以为 Cache-Control 指定 "),e("code",[t._v("public")]),t._v(" 或 "),e("code",[t._v("private")]),t._v(" 标记。"),e("strong",[t._v("如果使用 private，则表示该资源仅仅属于发出请求的最终用户，这将禁止中间服务器（如代理服务器）缓存此类资源")]),t._v("。"),e("strong",[t._v("对于 public，则允许所有服务器缓存该资源")]),t._v("。通常情况下，对于所有人都可以访问的资源（例如网站的 logo、图片、脚本等），"),e("strong",[t._v("Cache-Control 默认设为 public 是合理的")]),t._v("。")]),t._v(" "),e("h4",{attrs:{id:"协商缓存-last-modified-etag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-last-modified-etag"}},[t._v("#")]),t._v(" 协商缓存：Last-Modified&Etag")]),t._v(" "),e("p",[e("strong",[t._v("协商缓存是利用的是【Last-Modified，If-Modified-Since】和【ETag、If-None-Match】这两对 Header 来管理的")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("【Last-Modified，If-Modified-Since】的控制缓存的原理，如下")]),t._v("：")]),t._v(" "),e("ol",[e("li",[t._v("浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，"),e("strong",[t._v("在 response 的 header 加上 Last-Modified 的 header，这个 header 表示这个资源在服务器上的最后修改时间")])]),t._v(" "),e("li",[t._v("浏览器再次跟服务器请求这个资源时，"),e("strong",[t._v("在 request 的 header 上加上 If-Modified-Since 的 header")]),t._v("，这个 header 的值就是上一次请求时返回的 Last-Modified 的值")]),t._v(" "),e("li",[t._v("服务器再次收到资源请求时，"),e("strong",[t._v("根据浏览器传过来 If-Modified-Since 和资源在服务器上的最后修改时间判断资源是否有变化")]),t._v("，如果没有变化则返回 304 Not Modified，但是不会返回资源内容；如果有变化，就正常返回资源内容。"),e("strong",[t._v("当服务器返回 304 Not Modified 的响应时，response header 中不会再添加 Last-Modified 的 header")]),t._v("，因为既然资源没有变化，那么 Last-Modified 也就不会改变，")])]),t._v(" "),e("p",[t._v("【Last-Modified，If-Modified-Since】都是根据服务器时间返回的 header，一般来说，"),e("strong",[t._v("在没有调整服务器时间和篡改客户端缓存的情况下，这两个 header 配合起来管理协商缓存是非常可靠的，但是有时候也会服务器上资源其实有变化，但是最后修改时间却没有变化的情况")]),t._v("，而这种问题又很不容易被定位出来，而当这种情况出现的时候，就会影响协商缓存的可靠性。"),e("strong",[t._v("所以就有了另外一对 header 来管理协商缓存，这对 header 就是【ETag、If-None-Match】")]),t._v("。它们的缓存管理的方式是：")]),t._v(" "),e("ol",[e("li",[t._v("浏览器第一次跟服务器请求一个资源，"),e("strong",[t._v("服务器在返回这个资源的同时，在 response 的 header 加上 ETag 的 header")]),t._v("，这个 header 是服务器根据当前请求的资源生成的一个唯一标识，"),e("strong",[t._v("这个唯一标识是一个字符串，只要资源有变化这个串就不同")]),t._v("，跟最后修改时间没有关系，所以能很好的补充 Last-Modified 的问题")]),t._v(" "),e("li",[t._v("浏览器再次跟服务器请求这个资源时，"),e("strong",[t._v("在 request 的 header 上加上 If-None-Match 的 header")]),t._v("，这个 header 的值就是上一次请求时返回的 ETag 的值")]),t._v(" "),e("li",[t._v("服务器再次收到资源请求时，"),e("strong",[t._v("根据浏览器传过来 If-None-Match 和然后再根据资源生成一个新的 ETag")]),t._v("，如果这两个值相同就说明资源没有变化，否则就是有变化；如果没有变化则返回 304 Not Modified，但是不会返回资源内容；如果有变化，就正常返回资源内容。与 Last-Modified 不一样的是，当服务器返回 304 Not Modified 的响应时，"),e("strong",[t._v("由于 ETag 重新生成过，response header 中还会把这个 ETag 返回")]),t._v("，即使这个 ETag 跟之前的没有变化")])]),t._v(" "),e("p",[t._v("【Last-Modified，If-Modified-Since】和【ETag、If-None-Match】一般都是同时启用，这是为了处理 Last-Modified 不可靠的情况。有一种场景需要注意：")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("分布式系统里多台机器间文件的 Last-Modified 必须保持一致，以免负载均衡到不同机器导致比对失败")]),t._v("；")]),t._v(" "),e("p",[e("strong",[t._v("分布式系统尽量关闭掉 ETag(每台机器生成的 ETag 都会不一样）")]),t._v("；")])]),t._v(" "),e("p",[t._v("协商缓存需要配合强缓存使用，上面这个截图中，除了 Last-Modified 这个 header，还有强缓存的相关 header，"),e("strong",[t._v("因为如果不启用强缓存的话，协商缓存根本没有意义")]),t._v("。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(366),alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"网络安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络安全"}},[t._v("#")]),t._v(" 网络安全")]),t._v(" "),e("h3",{attrs:{id:"xss-攻击-跨站脚本攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击-跨站脚本攻击"}},[t._v("#")]),t._v(" XSS 攻击（跨站脚本攻击）")]),t._v(" "),e("p",[t._v("一种代码注入方式，为了与 CSS 区分所以被称为 XSS。早期常见于网络论坛，起因是网站没有对用户的输入行严格的限制，使得攻击者可以将脚本上传到帖子让其他啊人在浏览到有恶意脚本的页面。其注入方式很简单，包括但不限于 JavaScript / VBScript / CSS / Flash 等。XSS 的本质是：恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行。")]),t._v(" "),e("p",[t._v("以下内容都不可信：")]),t._v(" "),e("ul",[e("li",[t._v("来自用户的 UGC 信息")]),t._v(" "),e("li",[t._v("来自第三方的链接")]),t._v(" "),e("li",[t._v("URL 参数")]),t._v(" "),e("li",[t._v("POST 参数")]),t._v(" "),e("li",[t._v("Referer （可能来自不可信的来源）")]),t._v(" "),e("li",[t._v("Cookie （可能来自其他子域注入）")])]),t._v(" "),e("h4",{attrs:{id:"注入的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注入的方法"}},[t._v("#")]),t._v(" 注入的方法")]),t._v(" "),e("ul",[e("li",[t._v("在 HTML 中内嵌的文本中，恶意内容以 "),e("code",[t._v("script")]),t._v(" 标签形成注入。")]),t._v(" "),e("li",[t._v("在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。")]),t._v(" "),e("li",[t._v("在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。")]),t._v(" "),e("li",[t._v("在标签的 href、src 等属性中，包含 "),e("code",[t._v("javascript:")]),t._v(" 等可执行代码。")]),t._v(" "),e("li",[t._v("在 onload、onerror、onclick 等事件中，注入不受控制代码。")]),t._v(" "),e("li",[t._v("在 style 属性和标签中，包含类似 "),e("code",[t._v('background-image:url("javascript:...");')]),t._v(" 的代码（新版本浏览器已经可以防范）。")]),t._v(" "),e("li",[t._v("在 style 属性和标签中，包含类似 "),e("code",[t._v("expression(...)")]),t._v(" 的 CSS 表达式代码（新版本浏览器已经可以防范）。")])]),t._v(" "),e("h4",{attrs:{id:"xss-分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-分类"}},[t._v("#")]),t._v(" XSS 分类")]),t._v(" "),e("p",[t._v("根据攻击的来源，XSS 攻击可分为存储型、反射型和 DOM 型三种。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("存储区")]),t._v(" "),e("th",[t._v("插入点")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("存储型 XSS")]),t._v(" "),e("td",[t._v("后端数据库")]),t._v(" "),e("td",[t._v("HTML")])]),t._v(" "),e("tr",[e("td",[t._v("反射型 XSS")]),t._v(" "),e("td",[t._v("URL")]),t._v(" "),e("td",[t._v("HTML")])]),t._v(" "),e("tr",[e("td",[t._v("DOM 型 XSS")]),t._v(" "),e("td",[t._v("后端数据库/前端存储/URL")]),t._v(" "),e("td",[t._v("前端 JavaScript")])])])]),t._v(" "),e("ul",[e("li",[t._v("存储区：恶意代码存放的位置。")]),t._v(" "),e("li",[t._v("插入点：由谁取得恶意代码，并插入到网页上。")])]),t._v(" "),e("h5",{attrs:{id:"存储型-xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss"}},[t._v("#")]),t._v(" 存储型 XSS")]),t._v(" "),e("p",[t._v("存储型 XSS 的攻击步骤：")]),t._v(" "),e("ol",[e("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中。")]),t._v(" "),e("li",[t._v("用户打开目标网站时，网站服务端将恶意代码从数据库取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),e("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),e("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),e("p",[t._v("这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等。")]),t._v(" "),e("h5",{attrs:{id:"反射型-xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射型-xss"}},[t._v("#")]),t._v(" 反射型 XSS")]),t._v(" "),e("p",[t._v("反射型 XSS 的攻击步骤：")]),t._v(" "),e("ol",[e("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),e("li",[t._v("用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),e("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),e("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),e("p",[t._v("反射型 XSS 跟存储型 XSS 的区别是：存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。")]),t._v(" "),e("p",[t._v("反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。")]),t._v(" "),e("p",[t._v("由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击。")]),t._v(" "),e("p",[t._v("POST 的内容也可以触发反射型 XSS，只不过其触发条件比较苛刻（需要构造表单提交页面，并引导用户点击），所以非常少见。")]),t._v(" "),e("h5",{attrs:{id:"dom-型-xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss"}},[t._v("#")]),t._v(" DOM 型 XSS")]),t._v(" "),e("p",[t._v("DOM 型 XSS 的攻击步骤：")]),t._v(" "),e("ol",[e("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),e("li",[t._v("用户打开带有恶意代码的 URL。")]),t._v(" "),e("li",[t._v("用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。")]),t._v(" "),e("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),e("p",[t._v("DOM 型 XSS 跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。")]),t._v(" "),e("h4",{attrs:{id:"解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("利用模板引擎")]),t._v(" 开启模板引擎自带的 HTML 转义功能。例如： 在 ejs 中，尽量使用 "),e("code",[t._v("<%= data %>")]),t._v(" 而不是 "),e("code",[t._v("<%- data %>")]),t._v("； 在 doT.js 中，尽量使用 "),e("code",[t._v("{{! data }")]),t._v(" 而不是 "),e("code",[t._v("{{= data }")]),t._v("； 在 FreeMarker 中，确保引擎版本高于 2.3.24，并且选择正确的 "),e("code",[t._v("freemarker.core.OutputFormat")]),t._v("。")]),t._v(" "),e("li",[e("strong",[t._v("避免内联事件")]),t._v(" 尽量不要使用 "),e("code",[t._v("onLoad=\"onload('"+t._s(t.data)+"')\"")]),t._v("、"),e("code",[t._v("onClick=\"go('"+t._s(t.action)+"')\"")]),t._v(" 这种拼接内联事件的写法。在 JavaScript 中通过 "),e("code",[t._v(".addEventlistener()")]),t._v(" 事件绑定会更安全。")]),t._v(" "),e("li",[e("strong",[t._v("避免拼接 HTML")]),t._v(" 前端采用拼接 HTML 的方法比较危险，如果框架允许，使用 "),e("code",[t._v("createElement")]),t._v("、"),e("code",[t._v("setAttribute")]),t._v(" 之类的方法实现。或者采用比较成熟的渲染框架，如 Vue/React 等。")]),t._v(" "),e("li",[e("strong",[t._v("时刻保持警惕")]),t._v(" 在插入位置为 DOM 属性、链接等位置时，要打起精神，严加防范。")]),t._v(" "),e("li",[e("strong",[t._v("增加攻击难度，降低攻击后果")]),t._v(" 通过 CSP、输入长度配置、接口安全措施等方法，增加攻击的难度，降低攻击的后果。")]),t._v(" "),e("li",[e("strong",[t._v("主动检测和发现")]),t._v(" 可使用 XSS 攻击字符串和自动扫描工具寻找潜在的 XSS 漏洞。")])]),t._v(" "),e("h3",{attrs:{id:"csrf「cross-site-request-forgery」"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf「cross-site-request-forgery」"}},[t._v("#")]),t._v(" CSRF「Cross-site request forgery」")]),t._v(" "),e("blockquote",[e("p",[t._v("跨站请求伪造，冒用 Cookie 中的信息，发起请求攻击。")]),t._v(" "),e("p",[t._v("CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。")])]),t._v(" "),e("h4",{attrs:{id:"过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),e("ol",[e("li",[t._v("当用户已经登录成功了一个网站")]),t._v(" "),e("li",[t._v("然后通过被诱导进了第三方网站「钓鱼网站」")]),t._v(" "),e("li",[t._v("跳转过去了自动提交表单，冒用受害者信息")]),t._v(" "),e("li",[t._v("后台则正常走逻辑将用户提交的表单信息进行处理")])]),t._v(" "),e("h4",{attrs:{id:"攻击类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#攻击类型"}},[t._v("#")]),t._v(" 攻击类型")]),t._v(" "),e("ul",[e("li",[t._v("GET 类型 img 标签 script。")]),t._v(" "),e("li",[t._v("POST 类型 表单中的 post 请求")]),t._v(" "),e("li",[t._v("引诱用户点击 a 标签")])]),t._v(" "),e("h4",{attrs:{id:"必要条件才能触发-csrf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#必要条件才能触发-csrf"}},[t._v("#")]),t._v(" 必要条件才能触发 CSRF")]),t._v(" "),e("p",[t._v("与 XSS 不同的是，CSRF 攻击不需要将恶意代码注入用户的页面，仅仅是利用服务器的漏洞和用户的登录状态来实施攻击")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("目标站点一定要有 CSRF 漏洞；")]),t._v(" "),e("p",[t._v("后台接口一定是有问题的，"),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.bank.com%2Fwithdraw%3Fpay%3D100bitcon%3FuserId%3D1",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.bank.com/withdraw?pa…"),e("OutboundLink")],1),t._v(",这样的话攻击者才有机会。")])]),t._v(" "),e("li",[e("p",[t._v("用户要登录过目标站点，并且在浏览器上保持有该站点的登录状态；")])]),t._v(" "),e("li",[e("p",[t._v("需要用户打开一个第三方站点，可以是黑客的站点，也可以是一些论坛。")])])]),t._v(" "),e("h4",{attrs:{id:"防护策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防护策略"}},[t._v("#")]),t._v(" 防护策略")]),t._v(" "),e("h5",{attrs:{id:"同源检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同源检测"}},[t._v("#")]),t._v(" 同源检测")]),t._v(" "),e("p",[e("strong",[t._v("Origin Header")])]),t._v(" "),e("p",[t._v("在部分与 CSRF 有关的请求中，请求的 Header 中会携带 Origin 字段。字段内包含请求的域名（不包含 path 及 query），如果 Origin 存在，那么直接使用 Origin 中的字段确认来源域名就可以。")]),t._v(" "),e("p",[t._v("但是 Origin 在以下两种情况下并不存在： IE11 同源策略： IE 11 不会在跨站 CORS 请求上添加 Origin 标头，Referer 头将仍然是唯一的标识。最根本原因是因为 IE 11 对同源的定义和其他浏览器有不同，有两个主要的区别，可以参考 MDN Same-origin_policy#IE_Exceptions 302 重定向： 在 302 重定向之后 Origin 不包含在重定向的请求中，因为 Origin 可能会被认为是其他来源的敏感信息。对于 302 重定向的情况来说都是定向到新的服务器上的 URL，因此浏览器不想将 Origin 泄漏到新的服务器上。")]),t._v(" "),e("p",[e("strong",[t._v("Referer Header")])]),t._v(" "),e("p",[t._v("根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，记录了该 HTTP 请求的来源地址。 对于 Ajax 请求，图片和 script 等资源请求，Referer 为发起请求的页面地址。对于页面跳转，Referer 为打开页面历史记录的前一个页面地址。因此我们使用 Referer 中链接的 Origin 部分可以得知请求的来源域名。")]),t._v(" "),e("p",[t._v("因此，服务器的策略是优先判断 Origin，如果请求头中没有包含 Origin 属性，再根据实际情况判断是否使用 Referer 值，从而增加攻击难度。")]),t._v(" "),e("h5",{attrs:{id:"samesite-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#samesite-cookie"}},[t._v("#")]),t._v(" Samesite Cookie")]),t._v(" "),e("p",[t._v("为了从源头上解决这个问题，Google 起草了一份草案来改进 HTTP 协议，那就是为 Set-Cookie 响应头新增 Samesite 属性，它用来标明这个 Cookie 是个“同站 Cookie”，同站 Cookie 只能作为第一方 Cookie，不能作为第三方 Cookie，Samesite 有三个属性值，分别是 Strict 和 Lax，None 下面分别讲解：")]),t._v(" "),e("p",[e("strong",[t._v("Samesite=Strict")])]),t._v(" "),e("p",[t._v("这种称为严格模式，表明这个 Cookie 在任何情况下都不可能作为第三方 Cookie，绝无例外。比如说 b.com 设置了如下 Cookie：")]),t._v(" "),e("p",[t._v("我们在 a.com 下发起对 b.com 的任意请求，foo 这个 Cookie 都不会被包含在 Cookie 请求头中，但 bar 会。举个实际的例子就是，假如淘宝网站用来识别用户登录与否的 Cookie 被设置成了 Samesite=Strict，那么用户从百度搜索页面甚至天猫页面的链接点击进入淘宝后，淘宝都不会是登录状态，因为淘宝的服务器不会接受到那个 Cookie，其它网站发起的对淘宝的任意请求都不会带上那个 Cookie。")]),t._v(" "),e("div",{staticClass:"language-ini extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",[t._v("Set-Cookie: foo"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1; Samesite=Strict")]),t._v("\nSet-Cookie: bar"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2; Samesite=Lax")]),t._v("\nSet-Cookie: baz"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3")]),t._v("\n复制代码\n")])])]),e("p",[e("strong",[t._v("Samesite=Lax")]),t._v(" 这种称为宽松模式，比 Strict 放宽了点限制：假如这个请求是这种请求（改变了当前页面或者打开了新页面）且同时是个 GET 请求，则这个 Cookie 可以作为第三方 Cookie。比如说 b.com 设置了如下 Cookie：")]),t._v(" "),e("div",{staticClass:"language-ini extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",[t._v("Set-Cookie: foo"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1; Samesite=Strict")]),t._v("\nSet-Cookie: bar"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2; Samesite=Lax")]),t._v("\nSet-Cookie: baz"),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3")]),t._v("\n当用户从 a.com 点击链接进入 b.com 时，foo 这个 Cookie 不会被包含在 Cookie 请求头中，但 bar 和 baz 会，也就是说用户在不同网站之间通过链接跳转是不受影响了。但假如这个请求是从 a.com 发起的对 b.com 的异步请求，或者页面跳转是通过表单的 post 提交触发的，则bar也不会发送。\n复制代码\n")])])]),e("p",[e("strong",[t._v("我们应该如何使用 SamesiteCookie")]),t._v(" 如果 SamesiteCookie 被设置为 Strict，浏览器在任何跨域请求中都不会携带 Cookie，新标签重新打开也不携带，所以说 CSRF 攻击基本没有机会。")]),t._v(" "),e("p",[t._v("而且跳转子域名或者是新标签重新打开刚登陆的网站，之前的 Cookie 都不会存在。尤其是有登录的网站，那么我们新打开一个标签进入，或者跳转到子域名的网站，都需要重新登录。对于用户来讲，可能体验不会很好。")]),t._v(" "),e("p",[t._v("如果 SamesiteCookie 被设置为 Lax，那么其他网站通过页面跳转过来的时候可以使用 Cookie，可以保障外域连接打开页面时用户的登录状态。但相应的，其安全性也比较低。")]),t._v(" "),e("p",[t._v("总之，SamesiteCookie 是一个可能替代同源验证的方案，但是需要合理使用 Strict Lax。")]),t._v(" "),e("h5",{attrs:{id:"token-存在本地-local-strage-中的加密数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#token-存在本地-local-strage-中的加密数据"}},[t._v("#")]),t._v(" Token：存在本地 local strage 中的加密数据")]),t._v(" "),e("p",[t._v("token 是一个比较有效的 CSRF 防护方法，只要页面没有 XSS 漏洞泄露 Token，那么接口的 CSRF 攻击就无法成功，也是现在主流的解决方案。")]),t._v(" "),e("h5",{attrs:{id:"双重-cookie-验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双重-cookie-验证"}},[t._v("#")]),t._v(" 双重 Cookie 验证")]),t._v(" "),e("p",[t._v("利用 CSRF 攻击不能获取到用户 Cookie 的特点，我们可以要求 Ajax 和表单请求携带一个 Cookie 中的值。")]),t._v(" "),e("p",[t._v("双重 Cookie 采用以下流程： 在用户访问网站页面时，向请求域名注入一个 Cookie，内容为随机字符串（例如 csrfcookie=v8g9e4ksfhw）。 在前端向后端发起请求时，取出 Cookie，并添加到 URL 的参数中（接上例 POST "),e("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.a.com%2Fcomment%3Fcsrfcookie%3Dv8g9e4ksfhw",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.a.com/comment?csr…"),e("OutboundLink")],1),t._v("）。 后端接口验证 Cookie 中的字段与 URL 参数中的字段是否一致，不一致则拒绝。")]),t._v(" "),e("p",[t._v("如果用户访问的网站为"),e("a",{attrs:{href:"https://link.juejin.cn?target=www.a.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.a.com"),e("OutboundLink")],1),t._v("，而后端的 api 域名为 api.a.com。那么在"),e("a",{attrs:{href:"https://link.juejin.cn?target=www.a.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.a.com"),e("OutboundLink")],1),t._v("下，前端拿不到 api.a.com 的 Cookie，也就无法完成双重 Cookie 认证。 于是这个认证 Cookie 必须被种在 a.com 下，这样每个子域都可以访问。 任何一个子域都可以修改 a.com 下的 Cookie。 某个子域名存在漏洞被 XSS 攻击（例如 upload.a.com）。虽然这个子域下并没有什么值得窃取的信息。但攻击者修改了 a.com 下的 Cookie。 攻击者可以直接使用自己配置的 Cookie，对 XSS 中招的用户再向"),e("a",{attrs:{href:"https://link.juejin.cn?target=www.a.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.a.com"),e("OutboundLink")],1),t._v("下，发起 CSRF 攻击。")]),t._v(" "),e("p",[t._v("有时候也会造成 xsrf 的攻击，所以并不是一个好的解决方案。")]),t._v(" "),e("h5",{attrs:{id:"后端接口防止-xsrf-漏洞"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后端接口防止-xsrf-漏洞"}},[t._v("#")]),t._v(" 后端接口防止 XSRF 漏洞")]),t._v(" "),e("ul",[e("li",[t._v("严格管理所有的上传接口，防止任何预期之外的上传内容（例如 HTML）。")]),t._v(" "),e("li",[t._v("添加 Header "),e("code",[t._v("X-Content-Type-Options: nosniff")]),t._v(" 防止黑客上传 HTML 内容的资源（例如图片）被解析为网页。")]),t._v(" "),e("li",[t._v("对于用户上传的图片，进行转存或者校验。不要直接使用用户填写的图片链接。")])]),t._v(" "),e("h5",{attrs:{id:"前端提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端提示"}},[t._v("#")]),t._v(" 前端提示")]),t._v(" "),e("p",[t._v("当前用户打开其他用户填写的链接时，需告知风险（知乎跳转外链，等等都会告知风险）。")]),t._v(" "),e("h3",{attrs:{id:"防止-cookie-被窃取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防止-cookie-被窃取"}},[t._v("#")]),t._v(" 防止 cookie 被窃取？")]),t._v(" "),e("p",[e("strong",[t._v("1.设置 Cookie 的 HttpOnly 属性为 true。")])]),t._v(" "),e("p",[t._v("一般来说，跨站脚本攻击（XSS）最常见的攻击方式就是通过在交互式网站（例如论坛、微博等）中嵌入 javascript 脚本，当其他用户访问嵌有脚本的网页时，攻击者就能通过 document.cookie 窃取到用户 cookie 信息。如果网站开发者将 cookie 的 httponly 属性设置为 true，那么浏览器客户端就不允许嵌在网页中的 javascript 脚本去读取用户的 cookie 信息。")]),t._v(" "),e("p",[e("strong",[t._v("2.设置 cookie 的 secure 属性为 true。")])]),t._v(" "),e("p",[t._v("虽然方式 1 能防止攻击者通过 javascript 脚本的方式窃取 cookie，但是没办法防止攻击者通过 fiddler 等抓包工具直接截取请求数据包的方式获取 cookie 信息，这时候设置 secure 属性就显得很重要，当设置了 secure=true 时，那么 cookie 就只能在 https 协议下装载到请求数据包中，在 http 协议下就不会发送给服务器端，https 比 http 更加安全，这样就可以防止 cookie 被加入到 http 协议请求包暴露给抓包工具啦。")]),t._v(" "),e("p",[e("strong",[t._v("3.设置 cookie 的 samesite 属性为 strict 或 lax。")])]),t._v(" "),e("p",[t._v("前文提到攻击者获取到 cookie 后，还会发起跨站请求伪造（CSRF）攻击，这种攻击方式通常是在第三方网站发起的请求中携带受害者 cookie 信息，而设置了 samesite 为 strict 或 lax 后就能限制第三方 cookie，从而可以防御 CSRF 攻击。当然，当前常用的还有校验 token 和 referer 请求头的方式来防止 CSRF 攻击，感兴趣的读者也可以自己翻阅材料了解下。")]),t._v(" "),e("p",[e("strong",[t._v("4.设置 cookie 的 expires 属性值。")])]),t._v(" "),e("p",[t._v("通常，cookie 的有效期会被设置为永久有效或一个较长时间的正数值，这样的 cookie 会被保存在本地，攻击者获取 cookie 信息后可以在相当长的一段时间里控制用户账号，而如果给 cookie 设置 expires 值为-1，那么该 cookie 就仅仅保存在客户端内存中，当浏览器客户端被关闭时，cookie 就会失效了。")]),t._v(" "),e("p",[t._v("总结一下，小编上述整理的设置 cookie 的 httponly、secure、samesite、expires 属性值，能够从多角度出发，防止 cookie 被盗取，从而降低了被 XSS 和 CSRF 漏洞利用给用户造成损失的风险。")]),t._v(" "),e("h2",{attrs:{id:"promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" promise")]),t._v(" "),e("h3",{attrs:{id:"回调地狱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回调地狱"}},[t._v("#")]),t._v(" 回调地狱")]),t._v(" "),e("h4",{attrs:{id:"写一个回调地狱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#写一个回调地狱"}},[t._v("#")]),t._v(" 写一个回调地狱")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"构造-promise-工厂函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造-promise-工厂函数"}},[t._v("#")]),t._v(" 构造 Promise 工厂函数")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("promiseFactory")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("原理很简单，主要目的就是将 参数和回调进行分离，这也是解决回调地狱的基本原则。通过 promise 工厂函数，接受除了 "),e("code",[t._v("callback")]),t._v("意外的所有参数，然后利用 promise 的 resolve 替代原有的 "),e("code",[t._v("callback")]),t._v("去调用原函数。这样就完成了一个 promise 工厂函数。")]),t._v(" "),e("h4",{attrs:{id:"完整代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整代码"}},[t._v("#")]),t._v(" 完整代码")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fn('1', () => {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     fn('2', () => {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         fn('3', () => {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             fn('4', () => {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                 console.log('done')")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             })")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         })")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     })")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" promiseFactory "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("promiseFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("promiseFactory"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("promiseFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'3'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("promiseFactory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'4'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'done'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"前端性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[t._v("#")]),t._v(" 前端性能优化")]),t._v(" "),e("p",[t._v("优化方向有：")]),t._v(" "),e("ul",[e("li",[t._v("缩短请求耗时;")]),t._v(" "),e("li",[t._v("减少重排重绘;")]),t._v(" "),e("li",[t._v("改善 JS 性能。")])]),t._v(" "),e("h3",{attrs:{id:"缩短请求耗时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缩短请求耗时"}},[t._v("#")]),t._v(" 缩短请求耗时")]),t._v(" "),e("h4",{attrs:{id:"_1-优化打包资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-优化打包资源"}},[t._v("#")]),t._v(" 1. 优化打包资源")]),t._v(" "),e("p",[t._v("总体原则： 减少或延迟模块引用，以减少网络负荷。")]),t._v(" "),e("p",[t._v("常用工具：")]),t._v(" "),e("ul",[e("li",[t._v("webpack")]),t._v(" "),e("li",[t._v("webpack-bundle-analyzer 可视化分析工具")])]),t._v(" "),e("p",[t._v("常用方法：")]),t._v(" "),e("ul",[e("li",[t._v("减小体积：减少非必要的 import;压缩 JS 代码;配置服务器 gzip 等;使用 WebP 图片;")]),t._v(" "),e("li",[t._v("按需加载：可根据“路由”、“是否可见”按需加载 JS 代码，减少初次加载 JS 体积。比如可以使用 import()进行代码分割，按需加载;")]),t._v(" "),e("li",[t._v("分开打包：利用浏览器缓存机制，依据模块更新频率分层打包。")])]),t._v(" "),e("p",[t._v("其他方法：雪碧图：每个 HTTP/1.1 请求都是独立的 TCP 连接，最大 6 个并发，所以合并图片资源可以优化加载速度。HTTP/2 已经不需要这么做了。")]),t._v(" "),e("h4",{attrs:{id:"_2-cdn-加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-cdn-加速"}},[t._v("#")]),t._v(" 2. CDN 加速")]),t._v(" "),e("p",[t._v("总体原则： 通过分布式的边缘网络节点，缩短资源到终端用户的访问延迟。")]),t._v(" "),e("p",[t._v("常用工具：")]),t._v(" "),e("ul",[e("li",[t._v("Cloudflare")]),t._v(" "),e("li",[t._v("AWS CloudFront")]),t._v(" "),e("li",[t._v("Aliyun CDN")])]),t._v(" "),e("p",[t._v("常用方法：加速图片、视频等大体积文件")]),t._v(" "),e("h4",{attrs:{id:"_3-浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器缓存"}},[t._v("#")]),t._v(" 3. 浏览器缓存")]),t._v(" "),e("p",[t._v("总体原则：避免重复传输相同的数据，节省网络带宽，加速资源获取。")]),t._v(" "),e("p",[t._v("常用方法：")]),t._v(" "),e("p",[t._v("可以通过设置 HTTP Header 来控制缓存策略，一般有如下几种。")]),t._v(" "),e("p",[t._v("强缓存：")]),t._v(" "),e("ul",[e("li",[t._v("Expires：HTTP/1.0")]),t._v(" "),e("li",[t._v("Cache-Control：HTTP/1.1")])]),t._v(" "),e("p",[t._v("协商缓存：")]),t._v(" "),e("ul",[e("li",[t._v("ETag + If-None-Match")]),t._v(" "),e("li",[t._v("Last-Modified + If-Modified-Since")])]),t._v(" "),e("p",[t._v("拿 ETag 举例，如果浏览器给的 If-None-Match 值与服务端给的 ETag 值相等，服务器就直接返回 304，从而避免重复传输数据。")]),t._v(" "),e("p",[t._v("ETag 示例：")]),t._v(" "),e("p",[e("img",{attrs:{src:s(367),alt:"An image"}})]),t._v(" "),e("p",[t._v("如果几个配置同时存在，则优先级为：Cache-Control > Expires > ETag > Last-Modified。")]),t._v(" "),e("h4",{attrs:{id:"_4-更高版本的-http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-更高版本的-http"}},[t._v("#")]),t._v(" 4. 更高版本的 HTTP")]),t._v(" "),e("p",[t._v("总体原则：使用高版本 HTTP 提升性能。")]),t._v(" "),e("p",[t._v("常用工具：HTTP/2")]),t._v(" "),e("p",[t._v("HTTP/2 较 HTTP/1.1 最大的改进在于：")]),t._v(" "),e("ul",[e("li",[t._v("多路复用：单一 TCP 连接，多 HTTP 请求;")]),t._v(" "),e("li",[t._v("头部压缩：减少 HTTP 头体积;")]),t._v(" "),e("li",[t._v("请求优先级：优先获取重要的数据;")]),t._v(" "),e("li",[t._v("服务端推送：主动推送 CSS 等静态资源。")])]),t._v(" "),e("p",[t._v("其他方法：HTTP/3")]),t._v(" "),e("p",[t._v("HTTP/3 基于 UDP，有很多方面的性能改进，如多路复用无队头阻塞，响应更快。感兴趣的同学可参考 Wiki。")]),t._v(" "),e("h4",{attrs:{id:"_5-web-socket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-web-socket"}},[t._v("#")]),t._v(" 5. Web Socket")]),t._v(" "),e("p",[t._v("总体原则：解决 HTTP 协议无法实时通信的问题。")]),t._v(" "),e("p",[t._v("Web Socket 是一条有状态的 TCP 长连接，用于实现实时通信、实时响应。")]),t._v(" "),e("h4",{attrs:{id:"_6-服务器端渲染-ssr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-服务器端渲染-ssr"}},[t._v("#")]),t._v(" 6. 服务器端渲染(SSR)")]),t._v(" "),e("p",[t._v("总体原则：第一次访问时，服务器端直接返回渲染好的页面。")]),t._v(" "),e("p",[t._v("一般流程：")]),t._v(" "),e("ul",[e("li",[t._v("浏览器向 URL 发送请求;")]),t._v(" "),e("li",[t._v("服务器端返回“空白”index.html;")]),t._v(" "),e("li",[t._v("浏览器不能呈现页面，需要继续下载依赖;")]),t._v(" "),e("li",[t._v("加载所有脚本后，组件才能被渲染。")])]),t._v(" "),e("p",[t._v("SSR 流程：")]),t._v(" "),e("ul",[e("li",[t._v("浏览器向 URL 发送请求;")]),t._v(" "),e("li",[t._v("服务器端执行 JS 完成首屏渲染并返回;")]),t._v(" "),e("li",[t._v("浏览器直接呈现页面，然后继续下载其他依赖;")]),t._v(" "),e("li",[t._v("加载所有脚本后，组件将再次在客户端呈现。它将对现有 View 进行合并。")])]),t._v(" "),e("p",[t._v("常用工具：")]),t._v(" "),e("ul",[e("li",[t._v("Node.js，用于服务器端执行代码，输出 HTML 给浏览器，支持所有主流前端框架")]),t._v(" "),e("li",[t._v("Next.js，用于服务器端渲染 React 的框架")]),t._v(" "),e("li",[t._v("gatsby，用 React 生成静态网站的工具")])]),t._v(" "),e("p",[t._v("除了可以提升页面用户体验，还能应用于 SEO。")]),t._v(" "),e("h3",{attrs:{id:"减少重排重绘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减少重排重绘"}},[t._v("#")]),t._v(" 减少重排重绘")]),t._v(" "),e("p",[t._v("除了网络资源以外，另一个影响前端性能的因素就是前端页面的渲染绘制效率。")]),t._v(" "),e("p",[t._v("虽然不同的前端框架有一些差异，但整体的优化思路是一致的，这里将以 React 举例。")]),t._v(" "),e("h4",{attrs:{id:"_1-减少渲染量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少渲染量"}},[t._v("#")]),t._v(" 1. 减少渲染量")]),t._v(" "),e("p",[t._v("总体原则：不渲染未展示的部分。")]),t._v(" "),e("p",[t._v("常用工具：")]),t._v(" "),e("ul",[e("li",[t._v("react-window")]),t._v(" "),e("li",[t._v("react-loadable")]),t._v(" "),e("li",[t._v("JS 原生，如 IntersectionObserver")]),t._v(" "),e("li",[t._v("框架提供，如 React.lazy、react-intersection-observer")])]),t._v(" "),e("p",[t._v("常用方法：")]),t._v(" "),e("ul",[e("li",[t._v("虚拟列表：只渲染可见区;")]),t._v(" "),e("li",[t._v("惰性加载：无限滚动;")]),t._v(" "),e("li",[t._v("按需加载：页面只在切换过去时才加载。")])]),t._v(" "),e("p",[t._v("以虚拟列表举例，以下是使用 react-window 库，仅仅渲染了可见区的数据：")]),t._v(" "),e("p",[e("img",{attrs:{src:s(368),alt:"An image"}})]),t._v(" "),e("h4",{attrs:{id:"_2-减少渲染次数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少渲染次数"}},[t._v("#")]),t._v(" 2. 减少渲染次数")]),t._v(" "),e("p",[t._v("总体思路：避免重复的渲染。")]),t._v(" "),e("p",[t._v("常用工具：")]),t._v(" "),e("ul",[e("li",[t._v("lodash")]),t._v(" "),e("li",[t._v("JS 或框架自带")])]),t._v(" "),e("p",[t._v("常用方法：")]),t._v(" "),e("ul",[e("li",[t._v("防抖与节流;")]),t._v(" "),e("li",[t._v("对于 React 函数组件来说，合理使用副作用，拆分无关联的副作用;")]),t._v(" "),e("li",[t._v("对于 React 类组件来说，可以使用 shouldComponentUpdate 或使用 PureComponent 来优化渲染;")]),t._v(" "),e("li",[t._v("利用缓存，如 React.memo;")]),t._v(" "),e("li",[t._v("使用 requestAnimationFrame 替代 setInterval 执行动画。")])]),t._v(" "),e("h3",{attrs:{id:"改善-js-性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改善-js-性能"}},[t._v("#")]),t._v(" 改善 JS 性能")]),t._v(" "),e("p",[t._v("因为浏览器是单线程异步模型，长时间的运算会阻塞渲染过程，所以改善复杂运算有助于改善前端的整体性能。")]),t._v(" "),e("h4",{attrs:{id:"_1-缓存复杂计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-缓存复杂计算"}},[t._v("#")]),t._v(" 1. 缓存复杂计算")]),t._v(" "),e("p",[t._v("总体思路：避免重复计算。")]),t._v(" "),e("p",[t._v("常用方法：对于 React 函数组件来说，可以使用 useMemo 缓存复杂计算值。")]),t._v(" "),e("p",[t._v("举例如下，memoizedValue 需要经过复杂计算才能得到，此时就可以使用 useMemo 缓存，仅仅在输入参数发生变化时才重新计算，避免计算阻塞页面渲染，从而避免页面卡顿。")]),t._v(" "),e("p",[t._v("复制")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const MyFunctionalComponent = () => {\n const memoizedValue = useMemo(() => {\n   computeExpensiveValue(a, b);\n }, [a, b]);\n\n return <AComponent value={memoizedValue}/>;\n}1.2.3.4.5.6.7.\n")])])]),e("p",[t._v("但 useMemo 自身也有性能消耗，需要视情况使用，某些场景可以利用 React 的渲染机制避免性能问题。")]),t._v(" "),e("h4",{attrs:{id:"_2-web-worker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-web-worker"}},[t._v("#")]),t._v(" 2. Web Worker")]),t._v(" "),e("p",[t._v("总体原则：多线程思想。")]),t._v(" "),e("p",[t._v("常用方法：")]),t._v(" "),e("ul",[e("li",[t._v("Dedicated Workers，处理与 UI 无关的密集型数学计算：大数据集合排序、数据压缩、音视频处理;")]),t._v(" "),e("li",[t._v("Service Worker，服务端推送，或者 PWA 中配合 CacheStorage 在前端控制缓存资源;")]),t._v(" "),e("li",[t._v("Shared Worker，Tab 间通信。")])]),t._v(" "),e("p",[t._v("JS 语言在设计之初就是单线程异步模型，好处是可以高效处理 I/O 操作，但坏处是无法利用多核 CPU。")]),t._v(" "),e("p",[t._v("Web Worker 会启动系统级别的线程，可进行多线程编程，发挥多核的性能。")]),t._v(" "),e("h4",{attrs:{id:"_3-web-assembly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-web-assembly"}},[t._v("#")]),t._v(" 3. Web Assembly")]),t._v(" "),e("p",[t._v("总体原则：将复杂的计算逻辑编译为 Web Assembly，避免 JS 类型推断过程中的性能开销，可用于性能的极限优化。")]),t._v(" "),e("p",[t._v("适用范围有限：")]),t._v(" "),e("p",[t._v("曾在网上看到，有人使用自顶向下非优化的斐波那契数列算法来举例，说 Web Assembly 比原生 JS 快一倍，实测之后似乎也没有。")]),t._v(" "),e("p",[t._v("在同一台机器测试，其中求第 48 个值的耗时如下：")]),t._v(" "),e("ul",[e("li",[t._v("C(Ubuntu+GCC)：18s")]),t._v(" "),e("li",[t._v("JS(V8)：32s")]),t._v(" "),e("li",[t._v("Web Assembly(V8+EMCC)：39s")])]),t._v(" "),e("p",[t._v("一种可能的猜想是，斐波那契计算中没有大量的类型推断，而且 V8 内部有一些优化机制，使得此处 JS 执行速度快于 Web Assembly。")]),t._v(" "),e("p",[t._v("简而言之，并非所有场景都适用于 Web Assembly。")]),t._v(" "),e("p",[t._v("另一种运用场景是，把不同语言编写的代码(C/C++/Java 等)编译为 Web Assembly，能以接近原生的速度在 Web 中运行，并且与 JS 共存。")]),t._v(" "),e("h2",{attrs:{id:"浏览器从输入网址到页面展示的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器从输入网址到页面展示的过程"}},[t._v("#")]),t._v(" 浏览器从输入网址到页面展示的过程")]),t._v(" "),e("ul",[e("li",[t._v("URL 输入")]),t._v(" "),e("li",[t._v("DNS 解析")]),t._v(" "),e("li",[t._v("建立 TCP 连接")]),t._v(" "),e("li",[t._v("发送 HTTP / HTTPS 请求（建立 TLS 连接）")]),t._v(" "),e("li",[t._v("服务器响应请求")]),t._v(" "),e("li",[t._v("浏览器解析渲染页面")]),t._v(" "),e("li",[t._v("HTTP 请求结束，断开 TCP 连接")])]),t._v(" "),e("h2",{attrs:{id:"app开发模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app开发模式"}},[t._v("#")]),t._v(" APP开发模式")]),t._v(" "),e("p",[t._v("目前市场上主流的APP分为三种：")]),t._v(" "),e("ol",[e("li",[t._v("原生APP")]),t._v(" "),e("li",[t._v("Web APP（即HTML5）")]),t._v(" "),e("li",[t._v("混合APP 当然，还有flutter等")])]),t._v(" "),e("h3",{attrs:{id:"原生开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原生开发"}},[t._v("#")]),t._v(" 原生开发")]),t._v(" "),e("blockquote",[e("p",[t._v("原生开发（Native App开发），是在Android、IOS等移动平台上利用官方提供的开发语言、开发类库、开发工具进行App开发。比如Android是利用Java、Eclipse、Android studio；IOS是利用Objective-C 和Xcode进行开发。")])]),t._v(" "),e("h4",{attrs:{id:"优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),e("ol",[e("li",[t._v("可访问手机所有功能（如GPS、摄像头等）、可实现功能最齐全；")]),t._v(" "),e("li",[t._v("运行速度快、性能高，绝佳的用户体验；")]),t._v(" "),e("li",[t._v("支持大量图形和动画，不卡顿，反应快；")]),t._v(" "),e("li",[t._v("兼容性高，每个代码都经过程序员精心设计，一般不会出现闪退的情况，还能防止病毒和漏洞的出现；")]),t._v(" "),e("li",[t._v("比较快捷地使用设备端提供的接口，处理速度上有优势。")])]),t._v(" "),e("h4",{attrs:{id:"缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),e("ol",[e("li",[t._v("开发时间长，快则3个月左右完成，慢则五个月左右；")]),t._v(" "),e("li",[t._v("制作费用高昂，成本较高；")]),t._v(" "),e("li",[t._v("可移植性比较差，一款原生的App，Android和IOS都要各自开发，同样的逻辑、界面要写两套；")]),t._v(" "),e("li",[t._v("内容限制（App Store限制）；")]),t._v(" "),e("li",[t._v("必须等下载完毕用户才可以打开，获得新版本时需重新下载应用更新。")]),t._v(" "),e("li",[t._v("新需求迭代，上线慢。")])]),t._v(" "),e("h3",{attrs:{id:"web-app-h5开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-app-h5开发"}},[t._v("#")]),t._v(" web APP (h5开发)")]),t._v(" "),e("p",[t._v("HTML5应用开发，是利用Web技术进行的App开发，可以在手机端浏览器里面打开的网站就称之为webapp。Web技术本身需要浏览器的支持才能进行展示和用户交互，因此主要用到的技术是HTML、CSS、Javascript以及jQuery、Vue、React等JS框架。")]),t._v(" "),e("h4",{attrs:{id:"优点-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),e("ol",[e("li",[t._v("支持设备范围广，可以跨平台，编写的代码可以同时在Android、IOS、Windows上运行；")]),t._v(" "),e("li",[t._v("开发成本低、周期短；")]),t._v(" "),e("li",[t._v("无内容限制；")]),t._v(" "),e("li",[t._v("适合展示有大段文字（如新闻、攻略等），且格式比较丰富（如加粗，字体多样）的页面；")]),t._v(" "),e("li",[t._v("用户可以直接使用最新版本（自动更新，不需用户手动更新）。")])]),t._v(" "),e("h4",{attrs:{id:"缺点-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),e("ol",[e("li",[t._v("由于Web技术本身的限制，H5移动应用不能直接访问设备硬件和离线存储，所以在体验和性能上有很大的局限性；")]),t._v(" "),e("li",[t._v("对联网要求高，离线不能做任何操作；")]),t._v(" "),e("li",[t._v("功能有限；")]),t._v(" "),e("li",[t._v("APP反应速度慢，页面切换流畅性较差；")]),t._v(" "),e("li",[t._v("图片和动画支持性不高；")]),t._v(" "),e("li",[t._v("用户体验感较差；")]),t._v(" "),e("li",[t._v("无法调用手机硬件（摄像头、麦克风等）。")])]),t._v(" "),e("h3",{attrs:{id:"混合开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#混合开发"}},[t._v("#")]),t._v(" 混合开发")]),t._v(" "),e("blockquote",[e("p",[t._v("混合开发（Hybrid App开发），是指在开发一款App产品的时候，为了提高效率、节省成本而利用原生与H5的开发技术的混合应用。通俗点来说，这就是网页的模式，通常由“HTML5云网站+APP应用客户端”两部份构成。 混合开发是一种取长补短的开发模式，原生代码部分利用WebView插件或者其它框架为H5提供容器，程序主要的业务实现、界面展示都是利用与H5相关的Web技术进行实现的。比如京东、淘宝、今日头条等APP都是利用混合开发模式而成的。")])]),t._v(" "),e("h4",{attrs:{id:"优点-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点-3"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),e("ol",[e("li",[t._v("开发效率高，节约时间。同一套代码Android和IOS基本上都可使用；")]),t._v(" "),e("li",[t._v("更新和部署比较方便，每次升级版本只需要在服务器端升级即可，不再需要上传到App Store进行审核；")]),t._v(" "),e("li",[t._v("代码维护方便、版本更新快，节省产品成本；")]),t._v(" "),e("li",[t._v("比web版实现功能多；")]),t._v(" "),e("li",[t._v("可离线运行。")])]),t._v(" "),e("h4",{attrs:{id:"缺点-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点-3"}},[t._v("#")]),t._v(" 缺点：")]),t._v(" "),e("ol",[e("li",[t._v("功能/界面无法自定：所有内容都是固定的，不能换界面或增加功能；")]),t._v(" "),e("li",[t._v("加载缓慢/网络要求高：混合APP数据需要全部从服务器调取，每个页面都需要重新下载，因此打开速度慢，网络占用高，缓冲时间长，容易让用户反感；")]),t._v(" "),e("li",[t._v("安全性比较低：代码都是以前的老代码，不能很好地兼容最新手机系统，且安全性较低，网络发展这么快，病毒这么多，如果不实时更新，定期检查，容易产生漏洞，造成直接经济损失；")])]),t._v(" "),e("h3",{attrs:{id:"目前混合开发有两种开发模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目前混合开发有两种开发模式"}},[t._v("#")]),t._v(" 目前混合开发有两种开发模式：")]),t._v(" "),e("ol",[e("li",[t._v("原生主导的开发模式：需要安卓和IOS原生开发人员，整个App既有原生开发的页面，也有H5页面，在需要H5页面时由原生开发工程师实现内嵌，笔者最近正在开发的项目就使用这种开发模式。")]),t._v(" "),e("li",[t._v("H5主导的开发模式：只需要H5开发工程师，借助一些封装好的工具实现应用的打包与调用原生设备的功能，如HBuilder的云端打包功能。")])]),t._v(" "),e("h2",{attrs:{id:"css3动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css3动画"}},[t._v("#")]),t._v(" CSS3动画")]),t._v(" "),e("p",[e("code",[t._v("css")]),t._v("实现动画的方式，有如下几种：")]),t._v(" "),e("ul",[e("li",[t._v("transition 实现渐变动画")]),t._v(" "),e("li",[t._v("transform 转变动画")]),t._v(" "),e("li",[t._v("animation 实现自定义动画")])]),t._v(" "),e("h3",{attrs:{id:"transition-实现渐变动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transition-实现渐变动画"}},[t._v("#")]),t._v(" transition 实现渐变动画")]),t._v(" "),e("p",[e("code",[t._v("transition")]),t._v("的属性如下：")]),t._v(" "),e("ul",[e("li",[t._v("property:填写需要变化的css属性")]),t._v(" "),e("li",[t._v("duration:完成过渡效果需要的时间单位(s或者ms)")]),t._v(" "),e("li",[t._v("timing-function:完成效果的速度曲线")]),t._v(" "),e("li",[t._v("delay: 动画效果的延迟触发时间")])]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("timing-function")]),t._v("的值有如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("linear")]),t._v(" "),e("td",[t._v("匀速（等于 cubic-bezier(0,0,1,1)）")])]),t._v(" "),e("tr",[e("td",[t._v("ease")]),t._v(" "),e("td",[t._v("从慢到快再到慢（cubic-bezier(0.25,0.1,0.25,1)）")])]),t._v(" "),e("tr",[e("td",[t._v("ease-in")]),t._v(" "),e("td",[t._v("慢慢变快（等于 cubic-bezier(0.42,0,1,1)）")])]),t._v(" "),e("tr",[e("td",[t._v("ease-out")]),t._v(" "),e("td",[t._v("慢慢变慢（等于 cubic-bezier(0,0,0.58,1)）")])]),t._v(" "),e("tr",[e("td",[t._v("ease-in-out")]),t._v(" "),e("td",[t._v("先变快再到慢（等于 cubic-bezier(0.42,0,0.58,1)），渐显渐隐效果")])]),t._v(" "),e("tr",[e("td",[t._v("cubic-bezier("),e("em",[t._v("n")]),t._v(","),e("em",[t._v("n")]),t._v(","),e("em",[t._v("n")]),t._v(","),e("em",[t._v("n")]),t._v(")")]),t._v(" "),e("td",[t._v("在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值")])])])]),t._v(" "),e("p",[t._v("注意：并不是所有的属性都能使用过渡的，如"),e("code",[t._v("display:none<->display:block")])]),t._v(" "),e("p",[t._v("举个例子，实现鼠标移动上去发生变化动画效果")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token style"}},[e("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n      "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".base")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #0ea9ff"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #5daf34"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" background-color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" border-width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-duration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-timing-function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ease-in"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition-delay")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*简写*/")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*transition: all 2s ease-in 500ms;*/")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".base:hover")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #5daf34"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #3a8ee6"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"transform-转变动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transform-转变动画"}},[t._v("#")]),t._v(" transform 转变动画")]),t._v(" "),e("p",[t._v("包含四个常用的功能：")]),t._v(" "),e("ul",[e("li",[t._v("translate：位移")]),t._v(" "),e("li",[t._v("scale：缩放")]),t._v(" "),e("li",[t._v("rotate：旋转")]),t._v(" "),e("li",[t._v("skew：倾斜")])]),t._v(" "),e("blockquote",[e("p",[t._v("一般配合"),e("code",[t._v("transition")]),t._v("过度使用")]),t._v(" "),e("p",[t._v("注意的是，"),e("code",[t._v("transform")]),t._v("不支持"),e("code",[t._v("inline")]),t._v("元素，使用前把它变成"),e("code",[t._v("block")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<style>\n    .base {\n        width: 100px;\n        height: 100px;\n        display: inline-block;\n        background-color: #0EA9FF;\n        border-width: 5px;\n        border-style: solid;\n        border-color: #5daf34;\n        transition-property: width, height, background-color, border-width;\n        transition-duration: 2s;\n        transition-timing-function: ease-in;\n        transition-delay: 500ms;\n    }\n    .base2 {\n        transform: none;\n        transition-property: transform;\n        transition-delay: 5ms;\n    }\n\n    .base2:hover {\n        transform: scale(0.8, 1.5) rotate(35deg) skew(5deg) translate(15px, 25px);\n    }\n</style>\n <div class="base base2"></div>\n')])])]),e("p",[t._v("可以看到盒子发生了旋转，倾斜，平移，放大")]),t._v(" "),e("h3",{attrs:{id:"animation-实现自定义动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#animation-实现自定义动画"}},[t._v("#")]),t._v(" animation 实现自定义动画")]),t._v(" "),e("p",[e("code",[t._v("animation")]),t._v("是由 8 个属性的简写，分别如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),t._v(" "),e("th",[t._v("描述")]),t._v(" "),e("th",[t._v("属性值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("animation-duration")]),t._v(" "),e("td",[t._v("指定动画完成一个周期所需要时间，单位秒（s）或毫秒（ms），默认是 0")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("animation-timing-function")]),t._v(" "),e("td",[t._v('指定动画计时函数，即动画的速度曲线，默认是 "ease"')]),t._v(" "),e("td",[t._v("linear、ease、ease-in、ease-out、ease-in-out")])]),t._v(" "),e("tr",[e("td",[t._v("animation-delay")]),t._v(" "),e("td",[t._v("指定动画延迟时间，即动画何时开始，默认是 0")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("animation-iteration-count")]),t._v(" "),e("td",[t._v("指定动画播放的次数，默认是 1")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("animation-direction 指定动画播放的方向")]),t._v(" "),e("td",[t._v("默认是 normal")]),t._v(" "),e("td",[t._v("normal、reverse、alternate、alternate-reverse")])]),t._v(" "),e("tr",[e("td",[t._v("animation-fill-mode")]),t._v(" "),e("td",[t._v("指定动画填充模式。默认是 none")]),t._v(" "),e("td",[t._v("forwards、backwards、both")])]),t._v(" "),e("tr",[e("td",[t._v("animation-play-state")]),t._v(" "),e("td",[t._v("指定动画播放状态，正在运行或暂停。默认是 running")]),t._v(" "),e("td",[t._v("running、pauser")])]),t._v(" "),e("tr",[e("td",[t._v("animation-name")]),t._v(" "),e("td",[t._v("指定 "),e("a",{attrs:{href:"https://github.com/Keyframes",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Keyframes"),e("OutboundLink")],1),t._v(" 动画的名称")]),t._v(" "),e("td")])])]),t._v(" "),e("p",[e("code",[t._v("CSS")]),t._v(" 动画只需要定义一些关键的帧，而其余的帧，浏览器会根据计时函数插值计算出来，")]),t._v(" "),e("p",[t._v("通过 "),e("code",[t._v("@keyframes")]),t._v(" 来定义关键帧")]),t._v(" "),e("p",[t._v("因此，如果我们想要让元素旋转一圈，只需要定义开始和结束两帧即可：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("@keyframes rotate{\n    from{\n        transform: rotate(0deg);\n    }\n    to{\n        transform: rotate(360deg);\n    }\n}\n")])])]),e("p",[e("code",[t._v("from")]),t._v(" 表示最开始的那一帧，"),e("code",[t._v("to")]),t._v(" 表示结束时的那一帧")]),t._v(" "),e("p",[t._v("也可以使用百分比刻画生命周期")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("@keyframes rotate{\n    0%{\n        transform: rotate(0deg);\n    }\n    50%{\n        transform: rotate(180deg);\n    }\n    100%{\n        transform: rotate(360deg);\n    }\n}\n")])])]),e("p",[t._v("定义好了关键帧后，下来就可以直接用它了：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("animation: rotate 2s;\n")])])]),e("h2",{attrs:{id:"flex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" Flex")]),t._v(" "),e("p",[t._v("设为 Flex 布局以后，子元素的"),e("code",[t._v("float")]),t._v("、"),e("code",[t._v("clear")]),t._v("和"),e("code",[t._v("vertical-align")]),t._v("属性将失效。")]),t._v(" "),e("p",[t._v("以下6个属性设置在容器上。")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v(" \t\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 决定主轴的方向 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 换行方式 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  <flex-direction> || <flex-wrap>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 项目在主轴上的对齐方式 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between |\n          space-around"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 在交叉轴上如何对齐。 \n        baseline: 项目的第一行文字的基线对齐。\n        stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。*/")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between |\n          space-around | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("以下6个属性设置在项目上。")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 0 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。 负值对该属性无效。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 1 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ < "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flex-grow"')]),t._v(" > < "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flex-shrink"')]),t._v(" >? || < "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flex-basis"')]),t._v(" > ]"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。 */")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);